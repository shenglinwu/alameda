{
  "annotations": {
    "list": [
      {
        "builtIn": 1,
        "datasource": "-- Grafana --",
        "enable": true,
        "hide": true,
        "iconColor": "rgba(0, 211, 255, 1)",
        "name": "Annotations & Alerts",
        "type": "dashboard"
      }
    ]
  },
  "editable": true,
  "gnetId": null,
  "graphTooltip": 0,
  "id": 10,
  "iteration": 1565241809539,
  "links": [],
  "panels": [
    {
      "content": "<table style=\"height:80%;width:100%\">\n  <tr>\n    <td>\n      <div style=\"text-align:center;\">\n        <img style=\"vertical-align:middle;\" src=\"https://i1.wp.com/www.prophetstor.com/wp-content/uploads/2017/05/prophetstor_white_logo.png?fit=143%2C62&ssl=1\">\n        &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  \n        <span style=\"vertical-align:middle; font-size:30px;\">Federator.ai</span>\n      </div>\n    </td>\n  </tr>\n</table>\n",
      "datasource": null,
      "gridPos": {
        "h": 6,
        "w": 9,
        "x": 0,
        "y": 0
      },
      "id": 4,
      "links": [],
      "mode": "html",
      "options": {},
      "title": "Product",
      "type": "text"
    },
    {
      "content": "<h1 style=\"position: relative; text-align: center; vertical-align:middle; font-size:30px; top: 30%;\">__DEV_VERSION__</h1>",
      "datasource": null,
      "gridPos": {
        "h": 6,
        "w": 8,
        "x": 9,
        "y": 0
      },
      "id": 6,
      "links": [],
      "mode": "html",
      "options": {},
      "title": "Version",
      "type": "text"
    },
    {
      "content": "<table style=\"height:80%;width:100%\">\n  <tr>\n    <td>\n      <div id=\"home_lic_state\" type=\"text/JavaScript\" style=\"text-align:center;font-size:20px\"></div>\n    </td>\n  </tr>\n</table>\n<script>\n  var state = `${lic_status}`;\n  state = state.toLowerCase();\n  var l_color = \"#299c46\";\n  if (state == \"not activated\") {\n    l_color = \"#ed8128\";\n  }\n  else if (state == \"invalid\" || state == \"no keycode\" || state == \"expired\" || state == \"invalid\") {\n    l_color = \"#d44a3a\";\n  }\n  document.getElementById('home_lic_state').innerHTML = `${lic_status}`;\n  document.getElementById('home_lic_state').style.color = l_color;\n</script>\n<style>\ndiv.submenu-controls > div:nth-child(9) .template-variable, div.submenu-controls > div:nth-child(10) .template-variable {\n  color: #56ce84;\n}\n</style>",
      "datasource": null,
      "gridPos": {
        "h": 3,
        "w": 7,
        "x": 17,
        "y": 0
      },
      "id": 72,
      "links": [],
      "mode": "html",
      "options": {},
      "title": "License Status",
      "type": "text"
    },
    {
      "content": "<table style=\"height:80%;width:100%\">\n  <tr>\n    <td>\n      <div id=\"home_lic_expired_time\" type=\"text/JavaScript\" style=\"text-align:center;font-size:20px\"></div>\n    </td>\n  </tr>\n</table>\n<script>\n  var lic_e_t = parseInt(`${lic_expired_time}` || 0);\n  var lic_e_t_dis = '';\n  if (lic_e_t == 0 || lic_e_t == '') {\n    lic_e_t_dis = 'N/A';\n  }\n  else {\n    var date_t = new Date(lic_e_t);\n    lic_e_t_dis = date_t.getFullYear() + '-' + (\"0\" + (date_t.getMonth() + 1)).slice(-2) + '-' + (\"0\" + date_t.getDate()).slice(-2) + ' ' + (\"0\" + date_t.getHours()).slice(-2) + ':' + (\"0\" + date_t.getMinutes()).slice(-2) + ':' + (\"0\" + date_t.getSeconds()).slice(-2);\n  }\n  document.getElementById('home_lic_expired_time').innerHTML = lic_e_t_dis;\n</script>",
      "datasource": null,
      "gridPos": {
        "h": 3,
        "w": 7,
        "x": 17,
        "y": 3
      },
      "id": 73,
      "links": [],
      "mode": "html",
      "options": {},
      "title": "License Expiration Time",
      "type": "text"
    },
    {
      "collapsed": false,
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 6
      },
      "id": 18,
      "panels": [],
      "title": "Cluster Summary",
      "type": "row"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorValue": false,
      "colors": [
        "rgba(245, 54, 54, 0.9)",
        "rgba(237, 129, 40, 0.89)",
        "rgba(50, 172, 45, 0.97)"
      ],
      "datasource": "Prometheus",
      "format": "none",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 0,
        "y": 7
      },
      "hideTimeOverride": true,
      "id": 30,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "",
      "postfixFontSize": "50%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "",
      "targets": [
        {
          "expr": "count(kube_node_status_condition{condition=\"Ready\"} == 1)",
          "format": "time_series",
          "instant": true,
          "intervalFactor": 2,
          "refId": "A"
        }
      ],
      "thresholds": "",
      "timeFrom": "2d",
      "title": "Total Nodes",
      "type": "singlestat",
      "valueFontSize": "80%",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "current"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorValue": true,
      "colors": [
        "#299c46",
        "rgba(237, 129, 40, 0.89)",
        "#d44a3a"
      ],
      "datasource": "Prometheus",
      "description": "Crashing Pods in cluster (include the control plane)",
      "format": "none",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 4,
        "y": 7
      },
      "hideTimeOverride": true,
      "id": 28,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "",
      "postfixFontSize": "50%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "",
      "targets": [
        {
          "expr": "count(increase(kube_pod_container_status_restarts_total[1h]) > 5)",
          "format": "time_series",
          "hide": false,
          "instant": true,
          "intervalFactor": 2,
          "refId": "A"
        }
      ],
      "thresholds": "1, 3",
      "timeFrom": "2d",
      "title": "Crashing Pods",
      "type": "singlestat",
      "valueFontSize": "80%",
      "valueMaps": [
        {
          "op": "=",
          "text": "0",
          "value": "null"
        }
      ],
      "valueName": "current"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorValue": true,
      "colors": [
        "rgba(245, 54, 54, 0.9)",
        "rgba(237, 129, 40, 0.89)",
        "rgba(50, 172, 45, 0.97)"
      ],
      "datasource": "Prometheus",
      "format": "percent",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": true,
        "thresholdLabels": true,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 8,
        "y": 7
      },
      "hideTimeOverride": true,
      "id": 34,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "",
      "postfixFontSize": "50%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "",
      "targets": [
        {
          "expr": "(sum(up{job=\"kubelet\"} == 1) / count(up{job=\"kubelet\"})) * 100",
          "format": "time_series",
          "instant": true,
          "intervalFactor": 2,
          "refId": "A"
        }
      ],
      "thresholds": "50, 90",
      "timeFrom": "2d",
      "title": "Nodes UP",
      "transparent": true,
      "type": "singlestat",
      "valueFontSize": "80%",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "min"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorValue": true,
      "colors": [
        "rgba(245, 54, 54, 0.9)",
        "rgba(237, 129, 40, 0.89)",
        "rgba(50, 172, 45, 0.97)"
      ],
      "datasource": "Prometheus",
      "format": "percent",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": true,
        "thresholdLabels": true,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 12,
        "y": 7
      },
      "hideTimeOverride": true,
      "id": 32,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "",
      "postfixFontSize": "50%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "",
      "targets": [
        {
          "expr": "sum(kube_node_status_condition{condition=\"Ready\",status=\"true\"}) / sum(kube_node_status_condition{condition=\"Ready\"}) * 100",
          "format": "time_series",
          "hide": false,
          "instant": true,
          "intervalFactor": 2,
          "legendFormat": "",
          "refId": "A"
        }
      ],
      "thresholds": "50, 90",
      "timeFrom": "2d",
      "title": "Nodes Ready",
      "transparent": true,
      "type": "singlestat",
      "valueFontSize": "80%",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "min"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorValue": true,
      "colors": [
        "#299c46",
        "rgba(237, 129, 40, 0.89)",
        "#d44a3a"
      ],
      "datasource": "Prometheus",
      "format": "percent",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": true,
        "thresholdLabels": true,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 16,
        "y": 7
      },
      "hideTimeOverride": true,
      "id": 62,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "",
      "postfixFontSize": "50%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "",
      "targets": [
        {
          "expr": "sum(kube_node_status_condition{condition=\"MemoryPressure\",status=\"true\"}) / sum(kube_node_status_condition{condition=\"MemoryPressure\"}) * 100",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "instant": true,
          "intervalFactor": 2,
          "orderByTime": "ASC",
          "policy": "default",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "thresholds": "10, 50",
      "timeFrom": "2d",
      "title": "Nodes Memory Pressure",
      "transparent": true,
      "type": "singlestat",
      "valueFontSize": "80%",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "max"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorValue": true,
      "colors": [
        "#299c46",
        "rgba(237, 129, 40, 0.89)",
        "#d44a3a"
      ],
      "datasource": "Prometheus",
      "format": "percent",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": true,
        "thresholdLabels": true,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 4,
        "w": 4,
        "x": 20,
        "y": 7
      },
      "hideTimeOverride": true,
      "id": 64,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "",
      "postfixFontSize": "50%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "",
      "targets": [
        {
          "expr": "sum(kube_node_status_condition{condition=\"DiskPressure\",status=\"true\"}) / sum(kube_node_status_condition{condition=\"DiskPressure\"}) * 100",
          "format": "time_series",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "instant": true,
          "intervalFactor": 2,
          "orderByTime": "ASC",
          "policy": "default",
          "refId": "A",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "thresholds": "10, 50",
      "timeFrom": "2d",
      "title": "Nodes Disk Pressure",
      "transparent": true,
      "type": "singlestat",
      "valueFontSize": "80%",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "max"
    },
    {
      "columns": [],
      "datasource": "-- Mixed --",
      "fontSize": "100%",
      "gridPos": {
        "h": 5,
        "w": 24,
        "x": 0,
        "y": 11
      },
      "hideTimeOverride": true,
      "id": 48,
      "links": [],
      "options": {},
      "pageSize": null,
      "scroll": true,
      "showHeader": true,
      "sort": {
        "col": null,
        "desc": false
      },
      "styles": [
        {
          "alias": "Time",
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "pattern": "Time",
          "type": "hidden"
        },
        {
          "alias": "Node Name",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "node",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "Memory Usage",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "link": false,
          "mappingType": 1,
          "pattern": "Value #B",
          "thresholds": [],
          "type": "number",
          "unit": "percentunit"
        },
        {
          "alias": "CPU Usage",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "Value #C",
          "thresholds": [],
          "type": "number",
          "unit": "percentunit"
        },
        {
          "alias": "",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "__name__",
          "thresholds": [],
          "type": "hidden",
          "unit": "short"
        },
        {
          "alias": "Status",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "status",
          "thresholds": [],
          "type": "string",
          "unit": "short",
          "valueMaps": [
            {
              "text": "Up",
              "value": "true"
            },
            {
              "text": "Down",
              "value": "false"
            }
          ]
        },
        {
          "alias": "",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "condition",
          "thresholds": [],
          "type": "hidden",
          "unit": "short"
        },
        {
          "alias": "",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "decimals": 2,
          "pattern": "/.*/",
          "thresholds": [],
          "type": "hidden",
          "unit": "decbytes"
        }
      ],
      "targets": [
        {
          "datasource": "Prometheus",
          "expr": "kube_node_status_condition{condition=\"Ready\"} == 1",
          "format": "table",
          "hide": false,
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "{{node}}",
          "refId": "A"
        },
        {
          "datasource": "Prometheus",
          "expr": "node:node_cpu_utilisation:avg1m * 1",
          "format": "table",
          "hide": false,
          "instant": true,
          "intervalFactor": 1,
          "legendFormat": "",
          "refId": "C"
        },
        {
          "datasource": "Prometheus",
          "expr": "node:node_memory_utilisation:ratio * 1",
          "format": "table",
          "hide": false,
          "instant": true,
          "interval": "",
          "intervalFactor": 1,
          "legendFormat": "",
          "refId": "B"
        }
      ],
      "timeFrom": "2d",
      "timeShift": null,
      "title": "Nodes",
      "transform": "table",
      "type": "table"
    },
    {
      "collapsed": false,
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 16
      },
      "id": 16,
      "panels": [],
      "title": "Managed Pod Info",
      "type": "row"
    },
    {
      "columns": [],
      "datasource": "-- Mixed --",
      "fontSize": "100%",
      "gridPos": {
        "h": 4,
        "w": 24,
        "x": 0,
        "y": 17
      },
      "id": 50,
      "links": [],
      "options": {},
      "pageSize": null,
      "scroll": true,
      "showHeader": true,
      "sort": {
        "col": null,
        "desc": false
      },
      "styles": [
        {
          "alias": "Time",
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "pattern": "Time",
          "type": "hidden"
        },
        {
          "alias": "Namespace",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "namespace",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "Application Name",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "alameda_scaler_name",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "Pod Count",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 0,
          "mappingType": 1,
          "pattern": "pod_count",
          "thresholds": [],
          "type": "number",
          "unit": "short"
        },
        {
          "alias": "Memory Usage",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "memory",
          "thresholds": [],
          "type": "number",
          "unit": "decbytes"
        },
        {
          "alias": "HPA",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "enable_HPA",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 0,
          "mappingType": 1,
          "pattern": "value",
          "thresholds": [],
          "type": "number",
          "unit": "bytes"
        },
        {
          "alias": "VPA",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "enable_VPA",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "Type",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "alameda_scaler_scaling_tool",
          "thresholds": [],
          "type": "number",
          "unit": "short"
        },
        {
          "alias": "",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "",
          "thresholds": [],
          "type": "number",
          "unit": "short"
        },
        {
          "alias": "",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "decimals": 2,
          "pattern": "policy",
          "thresholds": [],
          "type": "hidden",
          "unit": "short"
        }
      ],
      "targets": [
        {
          "alias": "",
          "datasource": "InfluxDB",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "orderByTime": "ASC",
          "policy": "default",
          "query": "select \"alameda_scaler_scaling_tool\", \"policy\" from alameda_cluster_status..pod group by alameda_scaler_name, namespace limit 1",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        },
        {
          "datasource": "InfluxDB",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "orderByTime": "ASC",
          "policy": "default",
          "query": "select count(pod_phase) as pod_count  from alameda_cluster_status..pod group by  alameda_scaler_name, namespace",
          "rawQuery": true,
          "refId": "B",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Scaler",
      "transform": "table",
      "type": "table"
    },
    {
      "collapsed": false,
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 21
      },
      "id": 20,
      "panels": [],
      "title": "Resource Usage and Prediction",
      "type": "row"
    },
    {
      "cacheTimeout": null,
      "colorBackground": false,
      "colorValue": false,
      "colors": [
        "#299c46",
        "rgba(237, 129, 40, 0.89)",
        "#d44a3a"
      ],
      "datasource": "InfluxDB",
      "description": "Change Application by the Application selector on the top",
      "format": "none",
      "gauge": {
        "maxValue": 100,
        "minValue": 0,
        "show": false,
        "thresholdLabels": false,
        "thresholdMarkers": true
      },
      "gridPos": {
        "h": 2,
        "w": 24,
        "x": 0,
        "y": 22
      },
      "id": 68,
      "interval": null,
      "links": [],
      "mappingType": 1,
      "mappingTypes": [
        {
          "name": "value to text",
          "value": 1
        },
        {
          "name": "range to text",
          "value": 2
        }
      ],
      "maxDataPoints": 100,
      "nullPointMode": "connected",
      "nullText": null,
      "options": {},
      "postfix": "",
      "postfixFontSize": "50%",
      "prefix": "",
      "prefixFontSize": "50%",
      "rangeMaps": [
        {
          "from": "null",
          "text": "N/A",
          "to": "null"
        }
      ],
      "sparkline": {
        "fillColor": "rgba(31, 118, 189, 0.18)",
        "full": false,
        "lineColor": "rgb(31, 120, 193)",
        "show": false
      },
      "tableColumn": "alameda_scaler_name",
      "targets": [
        {
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "orderByTime": "ASC",
          "policy": "default",
          "query": "select alameda_scaler_name, \"policy\" from alameda_cluster_status..pod where \"namespace\" =~ /^[[ns]]$/ and \"alameda_scaler_name\" = '$scaler'",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "thresholds": "",
      "title": "Application Name",
      "type": "singlestat",
      "valueFontSize": "80%",
      "valueMaps": [
        {
          "op": "=",
          "text": "N/A",
          "value": "null"
        }
      ],
      "valueName": "first"
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "-- Mixed --",
      "fill": 0,
      "fillGradient": 0,
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 0,
        "y": 24
      },
      "hideTimeOverride": true,
      "id": 52,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 2,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [
        {
          "alias": "Observation : CPU Usage",
          "color": "#5195ce"
        },
        {
          "alias": "Prediction: CPU Usage",
          "color": "#f9e2d2",
          "dashLength": 5,
          "dashes": true,
          "spaceLength": 4
        },
        {
          "alias": "Prediction: CPU Usage Upperbound",
          "color": "#f9e2d2",
          "fillBelowTo": "Prediction: CPU Usage Lowerbound",
          "hideTooltip": false,
          "legend": false,
          "lines": false
        },
        {
          "alias": "Prediction: CPU Usage Lowerbound",
          "color": "#f9e2d2",
          "hideTooltip": false,
          "legend": false,
          "lines": false
        },
        {
          "alias": "Observation: CPU Usage",
          "color": "#5195ce"
        }
      ],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "datasource": "Prometheus",
          "expr": "sum(1000 * avg_over_time(namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate{namespace=~\"$pre_ns\",namespace!=\"\",pod_name=~\"[[deployment_pod]]|[[statefulset_pod]]|[[deploymentConfig_pod]]\", pod_name!=\"\", container_name!=\"POD\"}[3600s]))",
          "format": "time_series",
          "hide": false,
          "interval": "3600s",
          "intervalFactor": 1,
          "legendFormat": "Observation : CPU Usage",
          "refId": "A"
        },
        {
          "alias": "Prediction: CPU Usage",
          "datasource": "InfluxDB",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "orderByTime": "ASC",
          "policy": "default",
          "query": "select sum(value)  from \"alameda_prediction\"..\"application\" where  kind = 'raw' and granularity = '3600' and \"metric\" = 'cpu_usage_seconds_percentage'  and \"name\" =~ /^[[scaler]]$/ and time >= now() -2d and time <= now() + 1d group by time(3600s)",
          "rawQuery": true,
          "refId": "B",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        },
        {
          "alias": "Prediction: CPU Usage Upperbound",
          "datasource": "InfluxDB",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": true,
          "orderByTime": "ASC",
          "policy": "default",
          "query": "select sum(value) from \"alameda_prediction\"..\"container\" where  kind = 'upper_bound' and granularity = '3600' and \"metric\" = 'cpu_usage_seconds_percentage' and \"name\" =~ /^[[container]]$/ and \"namespace\" =~ /^[[ns]]$/  and \"pod_name\" =~ /^[[pod]]$/  and time >= now() and time <= now() + 1d group by time(3600s)",
          "rawQuery": true,
          "refId": "C",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        },
        {
          "alias": "Prediction: CPU Usage Lowerbound",
          "datasource": "InfluxDB",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": true,
          "orderByTime": "ASC",
          "policy": "default",
          "query": "select sum(value) from \"alameda_prediction\"..\"container\" where  kind = 'lower_bound' and granularity = '3600' and \"metric\" = 'cpu_usage_seconds_percentage' and \"name\" =~ /^[[container]]$/ and \"namespace\" =~ /^[[ns]]$/ and \"pod_name\" =~ /^[[pod]]$/ and time >= now() and time <= now() + 1d  group by time(3600s)",
          "rawQuery": true,
          "refId": "D",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        },
        {
          "alias": "Observation: CPU Usage",
          "datasource": "InfluxDB",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "orderByTime": "ASC",
          "policy": "default",
          "query": "select sum(mean) from (select mean(value) from alameda_metric..application_cpu where \"name\"=~ /^[[scaler]]$/ and \"namespace\" =~ /^[[ns]]$/ and time >= now() -2d and time <= now() and 'true' = '$preloader' group by time(3600s), \"namespace\") where time >= now() -2d and time <= now() group by time(3600s)",
          "rawQuery": true,
          "refId": "E",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "thresholds": [],
      "timeFrom": "3d",
      "timeRegions": [],
      "timeShift": "0d+1d",
      "title": "CPU: Observation, and Prediction (in CPU milicore)",
      "tooltip": {
        "shared": false,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "decimals": 2,
          "format": "none",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "aliasColors": {},
      "bars": false,
      "dashLength": 10,
      "dashes": false,
      "datasource": "-- Mixed --",
      "fill": 0,
      "fillGradient": 0,
      "gridPos": {
        "h": 9,
        "w": 12,
        "x": 12,
        "y": 24
      },
      "hideTimeOverride": true,
      "id": 54,
      "legend": {
        "avg": false,
        "current": false,
        "max": false,
        "min": false,
        "show": true,
        "total": false,
        "values": false
      },
      "lines": true,
      "linewidth": 2,
      "links": [],
      "nullPointMode": "null",
      "options": {
        "dataLinks": []
      },
      "percentage": false,
      "pointradius": 5,
      "points": false,
      "renderer": "flot",
      "seriesOverrides": [
        {
          "alias": "Observation: Memory Usage",
          "color": "#5195ce"
        },
        {
          "alias": "Prediction: Memory Usage",
          "color": "#f9e2d2",
          "dashLength": 5,
          "dashes": true,
          "spaceLength": 4
        },
        {
          "alias": "Prediction: Memory Usage Upperbound",
          "color": "#f9e2d2",
          "fillBelowTo": "Prediction: Memory Usage Lowerbound",
          "lines": false
        },
        {
          "alias": "Prediction: Memory Usage Lowerbound",
          "lines": false
        },
        {
          "alias": "Observation: Memory Usage",
          "color": "#5195ce"
        }
      ],
      "spaceLength": 10,
      "stack": false,
      "steppedLine": false,
      "targets": [
        {
          "datasource": "Prometheus",
          "expr": "round(sum(avg_over_time(container_memory_usage_bytes{namespace=~\"$pre_ns\",namespace!=\"\",pod_name=~\"[[memorys_deployment_pod]]|[[memorys_statefulset_pod]]|[[memorys_deploymentConfig_pod]]\", pod_name!=\"\", container_name!=\"POD\", container_name!=\"\"}[3600s])))",
          "format": "time_series",
          "hide": false,
          "interval": "3600s",
          "intervalFactor": 1,
          "legendFormat": "Observation: Memory Usage",
          "refId": "A"
        },
        {
          "alias": "Prediction: Memory Usage",
          "datasource": "InfluxDB",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "orderByTime": "ASC",
          "policy": "default",
          "query": "select round(sum(value))  from \"alameda_prediction\"..\"application\" where  kind = 'raw' and granularity = '3600' and \"metric\" = 'memory_usage_bytes' and \"name\" =~ /^[[scaler]]$/ and time >= now() -2d and time <= now() + 1d group by time(3600s)",
          "rawQuery": true,
          "refId": "B",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        },
        {
          "alias": "Prediction: Memory Usage Upperbound",
          "datasource": "InfluxDB",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": true,
          "orderByTime": "ASC",
          "policy": "default",
          "query": "select sum(value) from \"alameda_prediction\"..\"container\" where  kind = 'upper_bound' and granularity = '3600' and \"metric\" = 'memory_usage_bytes' and \"name\" =~ /^[[container]]$/ and \"pod_name\" =~ /^[[pod]]$/ and \"namespace\" =~ /^[[ns]]$/ and time >= now() and time <= now() + 1d group by time(3600s)",
          "rawQuery": true,
          "refId": "C",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        },
        {
          "alias": "Prediction: Memory Usage Lowerbound",
          "datasource": "InfluxDB",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": true,
          "orderByTime": "ASC",
          "policy": "default",
          "query": "select sum(value) from \"alameda_prediction\"..\"container\" where  kind = 'lower_bound' and granularity = '3600' and \"metric\" = 'memory_usage_bytes' and \"name\" =~ /^[[container]]$/ and \"pod_name\" =~ /^[[pod]]$/ and \"namespace\" =~ /^[[ns]]$/ and time >= now() and time <= now() + 1d group by time(3600s)",
          "rawQuery": true,
          "refId": "D",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        },
        {
          "alias": "Observation: Memory Usage",
          "datasource": "InfluxDB",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "orderByTime": "ASC",
          "policy": "default",
          "query": "select sum(mean) from (select mean(value) from alameda_metric..application_memory where \"name\"=~ /^[[scaler]]$/ and \"namespace\" =~ /^[[ns]]$/ and time >= now() -2d and time <= now() and 'true' = '$preloader' group by time(3600s), \"namespace\") where time >= now() -2d and time <= now() group by time(3600s)",
          "rawQuery": true,
          "refId": "E",
          "resultFormat": "time_series",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "thresholds": [],
      "timeFrom": "3d",
      "timeRegions": [],
      "timeShift": "0d+1d",
      "title": "Memory: Observation, and Prediction",
      "tooltip": {
        "shared": false,
        "sort": 0,
        "value_type": "individual"
      },
      "type": "graph",
      "xaxis": {
        "buckets": null,
        "mode": "time",
        "name": null,
        "show": true,
        "values": []
      },
      "yaxes": [
        {
          "decimals": 2,
          "format": "bytes",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": true
        },
        {
          "format": "short",
          "label": null,
          "logBase": 1,
          "max": null,
          "min": null,
          "show": false
        }
      ],
      "yaxis": {
        "align": false,
        "alignLevel": null
      }
    },
    {
      "collapsed": false,
      "datasource": null,
      "gridPos": {
        "h": 1,
        "w": 24,
        "x": 0,
        "y": 33
      },
      "id": 75,
      "panels": [],
      "title": "Events",
      "type": "row"
    },
    {
      "content": "<table class=\"table\" style=\"overflow: hidden\">\r\n  <tr style=\"border-top: 2px solid #171819 !important; border-bottom: 2px solid #171819 !important; padding: unset !important; line-height:0.5\">\r\n    <th class=\"th\" style=\"color: #56ce84\">Level</th>\r\n    <th class=\"th\" style=\"color: #56ce84\">Namespace</th>\r\n    <th class=\"th\">Time Range</th>\r\n  </tr>\r\n  <tr>\r\n    <td id=\"event_level\" class=\"td\" style=\"border-bottom: 2px solid #171819 !important;border-right: 2px solid #171819 !important;\"></td>\r\n    <td id=\"event_namespace\" class=\"td\" style=\"border-bottom: 2px solid #171819 !important;border-right: 2px solid #171819 !important;\"></td>\r\n    <td id=\"event_tr\" class=\"td\" style=\"border-bottom: 2px solid #171819 !important;border-right: 2px solid #171819 !important;\"></td>\r\n  </tr>\r\n</table>\r\n<script>\r\n\r\n  function getTimeRange() {\r\n    var tr = $(\"div.time-picker-button-select span.select-button-value span\").text();\r\n    document.getElementById('event_tr').innerHTML = tr;\r\n  }\r\n  getTimeRange();\r\n  $(\"div.dashboard-timepicker-wrapper\").on('DOMSubtreeModified', getTimeRange);\r\n  var event_level = `${event_level}`;\r\n  var event_namespace = `${event_ns}`;\r\n  event_namespace = event_namespace.replace('{','');\r\n  event_namespace = event_namespace.replace('}','');\r\n  document.getElementById('event_level').innerHTML = event_level;\r\n  document.getElementById('event_namespace').innerHTML = event_namespace;\r\n</script>\r\n<style>\r\n  .table {\r\n    border-collapse: collapse;\r\n    width: 100%;\r\n    height:95%;\r\n  }\r\n  \r\n  .th {\r\n    color: #33b5e5;\r\n    font-size: 13px;\r\n    text-align: left;\r\n  }\r\n  \r\n  .td {\r\n    text-align: left;\r\n    font-size: 13px;\r\n  }\r\n</style>",
      "datasource": null,
      "description": "Change Filter by the Event-Level selector on the top",
      "gridPos": {
        "h": 3,
        "w": 9,
        "x": 0,
        "y": 34
      },
      "id": 90,
      "links": [],
      "mode": "html",
      "options": {},
      "title": "Filter",
      "type": "text"
    },
    {
      "content": "<table style=\"height:100%;width:100%\">\n  <tr>\n    <td>\n      <div id=\"fatal_count\" type=\"text/JavaScript\" style=\"text-align:center;font-size:30px;\"></div>\n    </td>\n  </tr>\n</table>\n<script>\n  var count = `${fatal_count}` || 0;\n  document.getElementById('fatal_count').style.color = 'red';\n  document.getElementById('fatal_count').innerHTML = count;\n</script>",
      "datasource": null,
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 9,
        "y": 34
      },
      "id": 86,
      "links": [],
      "mode": "html",
      "options": {},
      "title": "Fatal",
      "type": "text"
    },
    {
      "content": "<table style=\"height:100%;width:100%\">\n  <tr>\n    <td>\n      <div id=\"error_count\" type=\"text/JavaScript\" style=\"text-align:center;font-size:30px;\"></div>\n    </td>\n  </tr>\n</table>\n<script>\n  var count = `${error_count}` || 0;\n  document.getElementById('error_count').style.color = 'red';\n  document.getElementById('error_count').innerHTML = count;\n</script>",
      "datasource": null,
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 12,
        "y": 34
      },
      "id": 88,
      "links": [],
      "mode": "html",
      "options": {},
      "title": "Error",
      "type": "text"
    },
    {
      "content": "<table style=\"height:100%;width:100%\">\n  <tr>\n    <td>\n      <div id=\"warning_count\" type=\"text/JavaScript\" style=\"text-align:center;font-size:30px;\"></div>\n    </td>\n  </tr>\n</table>\n<script>\n  var count = `${warning_count}` || 0;\n  document.getElementById('warning_count').style.color = 'yellow';\n  document.getElementById('warning_count').innerHTML = count;\n</script>",
      "datasource": null,
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 15,
        "y": 34
      },
      "id": 80,
      "links": [],
      "mode": "html",
      "options": {},
      "title": "Warning",
      "type": "text"
    },
    {
      "content": "<table style=\"height:100%;width:100%\">\n  <tr>\n    <td>\n      <div id=\"info_count\" type=\"text/JavaScript\" style=\"text-align:center;font-size:30px;\"></div>\n    </td>\n  </tr>\n</table>\n<script>\n  var count = `${info_count}` || 0;\n  document.getElementById('info_count').innerHTML = count;\n</script>",
      "datasource": null,
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 18,
        "y": 34
      },
      "id": 84,
      "links": [],
      "mode": "html",
      "options": {},
      "title": "Info",
      "type": "text"
    },
    {
      "content": "<table style=\"height:100%;width:100%\">\n  <tr>\n    <td>\n      <div id=\"debug_count\" type=\"text/JavaScript\" style=\"text-align:center;font-size:30px;\"></div>\n    </td>\n  </tr>\n</table>\n<script>\n  var count = `${debug_count}` || 0; \n  document.getElementById('debug_count').innerHTML = count;\n</script>\n<style scope>\n .markdown-html td, .markdown-html table, .markdown-html tr {\n  border: none !important\n}\n</style>",
      "datasource": null,
      "gridPos": {
        "h": 3,
        "w": 3,
        "x": 21,
        "y": 34
      },
      "id": 82,
      "links": [],
      "mode": "html",
      "options": {},
      "title": "Debug",
      "type": "text"
    },
    {
      "columns": [],
      "datasource": "-- Mixed --",
      "fontSize": "100%",
      "gridPos": {
        "h": 11,
        "w": 24,
        "x": 0,
        "y": 37
      },
      "id": 76,
      "links": [],
      "options": {},
      "pageSize": 10,
      "scroll": true,
      "showHeader": true,
      "sort": {
        "col": null,
        "desc": false
      },
      "styles": [
        {
          "alias": "Time",
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "pattern": "Time",
          "type": "date"
        },
        {
          "alias": "Level",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "level",
          "sanitize": true,
          "thresholds": [],
          "type": "string",
          "unit": "short",
          "valueMaps": [
            {
              "text": "Undefined",
              "value": "EVENT_LEVEL_UNDEFINED"
            },
            {
              "text": "Debug",
              "value": "EVENT_LEVEL_DEBUG"
            },
            {
              "text": "<img src=\"http://icons.iconarchive.com/icons/custom-icon-design/flatastic-1/16/information-icon.png\" alt=\"Smiley face\" height=\"12\" width=\"12\"><font color=\"white\"> Info</font>",
              "value": "EVENT_LEVEL_INFO"
            },
            {
              "text": "<img src=\"http://icons.iconarchive.com/icons/paomedia/small-n-flat/16/sign-warning-icon.png\" alt=\"Smiley face\" height=\"12\" width=\"12\"><font color=\"yellow\"> Warning</font>",
              "value": "EVENT_LEVEL_WARNING"
            },
            {
              "text": "<img src=\"http://icons.iconarchive.com/icons/awicons/vista-artistic/16/delete-icon.png\" alt=\"Smiley face\" height=\"12\" width=\"12\"><font color=\"red\"> Error</font>",
              "value": "EVENT_LEVEL_ERROR"
            },
            {
              "text": "<img src=\"http://icons.iconarchive.com/icons/awicons/vista-artistic/16/delete-icon.png\" alt=\"Smiley face\" height=\"12\" width=\"12\"><font color=\"red\"> Fatal</font>",
              "value": "EVENT_LEVEL_FATAL"
            }
          ]
        },
        {
          "alias": "Message",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "message",
          "thresholds": [],
          "type": "string",
          "unit": "short"
        },
        {
          "alias": "Type",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "type",
          "thresholds": [],
          "type": "string",
          "unit": "short",
          "valueMaps": [
            {
              "text": "Undefined",
              "value": "EVENT_TYPE_UNDEFINED"
            },
            {
              "text": "Alameda scaler create",
              "value": "EVENT_TYPE_ALAMEDA_SCALER_CREATE"
            },
            {
              "text": "Alameda scaler delete",
              "value": "EVENT_TYPE_ALAMEDA_SCALER_DELETE"
            },
            {
              "text": "Node register",
              "value": "EVENT_TYPE_NODE_REGISTER"
            },
            {
              "text": "Deployment register",
              "value": "EVENT_TYPE_DEPLOYMENT_REGISTER"
            },
            {
              "text": "Deploymenet config register",
              "value": "EVENT_TYPE_DEPLOYMENT_CONFIG_REGISTER"
            },
            {
              "text": "Pod register",
              "value": "EVENT_TYPE_POD_REGISTER"
            },
            {
              "text": "Node deregister",
              "value": "EVENT_TYPE_NODE_DEREGISTER"
            },
            {
              "text": "Deployment deregister",
              "value": "EVENT_TYPE_DEPLOYMENT_DEREGISTER"
            },
            {
              "text": "Deployment config deregister",
              "value": "EVENT_TYPE_DEPLOYMENT_CONFIG_DEREGISTER"
            },
            {
              "text": "Pod deregister",
              "value": "EVENT_TYPE_POD_DEREGISTER"
            },
            {
              "text": "Node prediction create",
              "value": "EVENT_TYPE_NODE_PREDICTION_CREATE"
            },
            {
              "text": "Pod prediction create",
              "value": "EVENT_TYPE_POD_PREDICTION_CREATE"
            },
            {
              "text": "VPA recommendation create",
              "value": "EVENT_TYPE_VPA_RECOMMENDATION_CREATE"
            },
            {
              "text": "HPA recommendation create",
              "value": "EVENT_TYPE_HPA_RECOMMENDATION_CREATE"
            },
            {
              "text": "Pod evict",
              "value": "EVENT_TYPE_POD_EVICT"
            },
            {
              "text": "Pod patch",
              "value": "EVENT_TYPE_POD_PATCH"
            },
            {
              "text": "Anomaly metric detect",
              "value": "EVENT_TYPE_ANOMALY_METRIC_DETECT"
            },
            {
              "text": "Anomaly analysis create",
              "value": "EVENT_TYPE_ANOMALY_ANALYSIS_CREATE"
            },
            {
              "text": "License",
              "value": "EVENT_TYPE_LICENSE"
            },
            {
              "text": "Email notification",
              "value": "EVENT_TYPE_EMAIL_NOTIFICATION"
            },
            {
              "text": "Anomaly forecast detect",
              "value": "EVENT_TYPE_ANOMALY_FORECAST_DETECT"
            },
            {
              "text": "Anomaly realtime detect",
              "value": "EVENT_TYPE_ANOMALY_REALTIME_DETECT"
            }
          ]
        },
        {
          "alias": "Kind",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "subject_kind",
          "thresholds": [],
          "type": "number",
          "unit": "short"
        },
        {
          "alias": "Namespace",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "subject_namespace",
          "thresholds": [],
          "type": "number",
          "unit": "short"
        },
        {
          "alias": "Name",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "dateFormat": "YYYY-MM-DD HH:mm:ss",
          "decimals": 2,
          "mappingType": 1,
          "pattern": "subject_name",
          "thresholds": [],
          "type": "number",
          "unit": "short"
        },
        {
          "alias": "",
          "colorMode": null,
          "colors": [
            "rgba(245, 54, 54, 0.9)",
            "rgba(237, 129, 40, 0.89)",
            "rgba(50, 172, 45, 0.97)"
          ],
          "decimals": 2,
          "pattern": "/.*/",
          "thresholds": [],
          "type": "number",
          "unit": "short"
        }
      ],
      "targets": [
        {
          "alias": "",
          "datasource": "InfluxDB",
          "groupBy": [
            {
              "params": [
                "$__interval"
              ],
              "type": "time"
            },
            {
              "params": [
                "null"
              ],
              "type": "fill"
            }
          ],
          "hide": false,
          "orderByTime": "ASC",
          "policy": "default",
          "query": "select * from(select level, subject_kind, subject_name, subject_namespace, message, type from alameda_event..event where level =~ /^[[debug_condition]]$/ and subject_namespace =~ /^[[event_ns]]$/ and 'Debug' = '$event_level'),\n(select level, subject_kind, subject_name, subject_namespace, message, type from alameda_event..event where level =~ /^[[info_condition]]$/ and subject_namespace =~ /^[[event_ns]]$/ and 'Info' = '$event_level'),\n(select level, subject_kind, subject_name, subject_namespace, message, type from alameda_event..event where level =~ /^[[warning_condition]]$/ and subject_namespace =~ /^[[event_ns]]$/ and 'Warning' = '$event_level'),\n(select level, subject_kind, subject_name, subject_namespace, message, type from alameda_event..event where level =~ /^[[error_condition]]$/ and subject_namespace =~ /^[[event_ns]]$/ and 'Error' = '$event_level'),\n(select level, subject_kind, subject_name, subject_namespace, message, type from alameda_event..event where level = 'EVENT_LEVEL_FATAL'  and subject_namespace =~ /^[[event_ns]]$/ and 'Fatal' = '$event_level') where $timeFilter order by time desc",
          "rawQuery": true,
          "refId": "A",
          "resultFormat": "table",
          "select": [
            [
              {
                "params": [
                  "value"
                ],
                "type": "field"
              },
              {
                "params": [],
                "type": "mean"
              }
            ]
          ],
          "tags": []
        }
      ],
      "title": "Events",
      "transform": "table",
      "type": "table"
    }
  ],
  "refresh": "5m",
  "schemaVersion": 20,
  "style": "dark",
  "tags": [],
  "templating": {
    "list": [
      {
        "allValue": null,
        "current": {
          "isNone": true,
          "text": "None",
          "value": ""
        },
        "datasource": "InfluxDB",
        "definition": "select preloader from alameda_metric..grafana_config order by time desc limit 1",
        "hide": 2,
        "includeAll": false,
        "label": "Preloader",
        "multi": false,
        "name": "preloader",
        "options": [],
        "query": "select preloader from alameda_metric..grafana_config order by time desc limit 1",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "datasource": "InfluxDB",
        "definition": "show tag values on alameda_cluster_status from pod with key = \"namespace\"",
        "hide": 2,
        "includeAll": true,
        "label": "NameSpace",
        "multi": true,
        "name": "ns",
        "options": [],
        "query": "show tag values on alameda_cluster_status from pod with key = \"namespace\"",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "datasource": "InfluxDB",
        "definition": "show tag values on alameda_cluster_status from pod with key = \"namespace\" where ('false' = '$preloader' or '' = '$preloader')",
        "hide": 2,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "pre_ns",
        "options": [],
        "query": "show tag values on alameda_cluster_status from pod with key = \"namespace\" where ('false' = '$preloader' or '' = '$preloader')",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "selected": true,
          "text": "alameda-nginx-hpa",
          "value": "alameda-nginx-hpa"
        },
        "datasource": "InfluxDB",
        "definition": "show tag values on alameda_cluster_status from pod with key = \"alameda_scaler_name\" where \"namespace\" =~ /^[[ns]]$/",
        "hide": 0,
        "includeAll": false,
        "label": "Application",
        "multi": false,
        "name": "scaler",
        "options": [],
        "query": "show tag values on alameda_cluster_status from pod with key = \"alameda_scaler_name\" where \"namespace\" =~ /^[[ns]]$/",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "datasource": "InfluxDB",
        "definition": "show tag values  on alameda_cluster_status from pod with key = \"name\" where \"namespace\" =~ /^[[ns]]$/ and \"alameda_scaler_name\" = '$scaler' and \"alameda_scaler_scaling_tool\" =~ /VPA/",
        "hide": 2,
        "includeAll": true,
        "label": "pod",
        "multi": true,
        "name": "pod",
        "options": [],
        "query": "show tag values  on alameda_cluster_status from pod with key = \"name\" where \"namespace\" =~ /^[[ns]]$/ and \"alameda_scaler_name\" = '$scaler' and \"alameda_scaler_scaling_tool\" =~ /VPA/",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "datasource": "InfluxDB",
        "definition": "show tag values on alameda_cluster_status from container with key = \"name\" where \"namespace\" =~ /^[[ns]]$/  and \"pod_name\"=~ /^[[pod]]$/",
        "hide": 2,
        "includeAll": true,
        "label": "container",
        "multi": true,
        "name": "container",
        "options": [],
        "query": "show tag values on alameda_cluster_status from container with key = \"name\" where \"namespace\" =~ /^[[ns]]$/  and \"pod_name\"=~ /^[[pod]]$/",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "Not Activated",
          "value": "Not Activated"
        },
        "datasource": "InfluxDB",
        "definition": "select status from alameda_cluster_status..keycode limit 1",
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "lic_status",
        "options": [],
        "query": "select status from alameda_cluster_status..keycode limit 1",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "1578616676000",
          "value": "1578616676000"
        },
        "datasource": "InfluxDB",
        "definition": "select expire_timestamp * 1000 from alameda_cluster_status..keycode limit 1",
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "lic_expired_time",
        "options": [],
        "query": "select expire_timestamp * 1000 from alameda_cluster_status..keycode limit 1",
        "refresh": 1,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "selected": true,
          "text": "Warning",
          "value": "Warning"
        },
        "hide": 0,
        "includeAll": false,
        "label": "Event Level",
        "multi": false,
        "name": "event_level",
        "options": [
          {
            "selected": false,
            "text": "Debug",
            "value": "Debug"
          },
          {
            "selected": false,
            "text": "Info",
            "value": "Info"
          },
          {
            "selected": true,
            "text": "Warning",
            "value": "Warning"
          },
          {
            "selected": false,
            "text": "Error",
            "value": "Error"
          },
          {
            "selected": false,
            "text": "Fatal",
            "value": "Fatal"
          }
        ],
        "query": "Debug, Info, Warning, Error, Fatal",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": "InfluxDB",
        "definition": "show tag values on alameda_event from event with key = \"subject_namespace\"",
        "hide": 0,
        "includeAll": true,
        "label": "Event Namespace",
        "multi": false,
        "name": "event_ns",
        "options": [],
        "query": "show tag values on alameda_event from event with key = \"subject_namespace\"",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "hide": 2,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "debug_condition",
        "options": [
          {
            "selected": true,
            "text": "All",
            "value": "$__all"
          },
          {
            "selected": false,
            "text": "EVENT_LEVEL_DEBUG",
            "value": "EVENT_LEVEL_DEBUG"
          },
          {
            "selected": false,
            "text": "EVENT_LEVEL_INFO",
            "value": "EVENT_LEVEL_INFO"
          },
          {
            "selected": false,
            "text": "EVENT_LEVEL_WARNING",
            "value": "EVENT_LEVEL_WARNING"
          },
          {
            "selected": false,
            "text": "EVENT_LEVEL_ERROR",
            "value": "EVENT_LEVEL_ERROR"
          },
          {
            "selected": false,
            "text": "EVENT_LEVEL_FATAL",
            "value": "EVENT_LEVEL_FATAL"
          }
        ],
        "query": "EVENT_LEVEL_DEBUG, EVENT_LEVEL_INFO, EVENT_LEVEL_WARNING, EVENT_LEVEL_ERROR, EVENT_LEVEL_FATAL",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "hide": 2,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "info",
        "options": [
          {
            "selected": true,
            "text": "All",
            "value": "$__all"
          },
          {
            "selected": false,
            "text": "Debug",
            "value": "Debug"
          },
          {
            "selected": false,
            "text": "Info",
            "value": "Info"
          }
        ],
        "query": "Debug, Info",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "hide": 2,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "info_condition",
        "options": [
          {
            "selected": true,
            "text": "All",
            "value": "$__all"
          },
          {
            "selected": false,
            "text": "EVENT_LEVEL_INFO",
            "value": "EVENT_LEVEL_INFO"
          },
          {
            "selected": false,
            "text": "EVENT_LEVEL_WARNING",
            "value": "EVENT_LEVEL_WARNING"
          },
          {
            "selected": false,
            "text": "EVENT_LEVEL_ERROR",
            "value": "EVENT_LEVEL_ERROR"
          },
          {
            "selected": false,
            "text": "EVENT_LEVEL_FATAL",
            "value": "EVENT_LEVEL_FATAL"
          }
        ],
        "query": "EVENT_LEVEL_INFO, EVENT_LEVEL_WARNING, EVENT_LEVEL_ERROR, EVENT_LEVEL_FATAL",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "hide": 2,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "warning",
        "options": [
          {
            "selected": true,
            "text": "All",
            "value": "$__all"
          },
          {
            "selected": false,
            "text": "Debug",
            "value": "Debug"
          },
          {
            "selected": false,
            "text": "Info",
            "value": "Info"
          },
          {
            "selected": false,
            "text": "Warning",
            "value": "Warning"
          }
        ],
        "query": "Debug, Info, Warning",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "hide": 2,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "warning_condition",
        "options": [
          {
            "selected": true,
            "text": "All",
            "value": "$__all"
          },
          {
            "selected": false,
            "text": "EVENT_LEVEL_WARNING",
            "value": "EVENT_LEVEL_WARNING"
          },
          {
            "selected": false,
            "text": "EVENT_LEVEL_ERROR",
            "value": "EVENT_LEVEL_ERROR"
          },
          {
            "selected": false,
            "text": "EVENT_LEVEL_FATAL",
            "value": "EVENT_LEVEL_FATAL"
          }
        ],
        "query": "EVENT_LEVEL_WARNING, EVENT_LEVEL_ERROR, EVENT_LEVEL_FATAL",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "hide": 2,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "error",
        "options": [
          {
            "selected": true,
            "text": "All",
            "value": "$__all"
          },
          {
            "selected": false,
            "text": "Debug",
            "value": "Debug"
          },
          {
            "selected": false,
            "text": "Info",
            "value": "Info"
          },
          {
            "selected": false,
            "text": "Warning",
            "value": "Warning"
          },
          {
            "selected": false,
            "text": "Error",
            "value": "Error"
          }
        ],
        "query": "Debug, Info, Warning, Error",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": [
            "$__all"
          ]
        },
        "hide": 2,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "error_condition",
        "options": [
          {
            "selected": true,
            "text": "All",
            "value": "$__all"
          },
          {
            "selected": false,
            "text": "EVENT_LEVEL_ERROR",
            "value": "EVENT_LEVEL_ERROR"
          },
          {
            "selected": false,
            "text": "EVENT_LEVEL_FATAL",
            "value": "EVENT_LEVEL_FATAL"
          }
        ],
        "query": "EVENT_LEVEL_ERROR, EVENT_LEVEL_FATAL",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {
          "text": "Debug",
          "value": [
            "Debug"
          ]
        },
        "hide": 2,
        "includeAll": true,
        "label": null,
        "multi": true,
        "name": "fatal",
        "options": [
          {
            "selected": false,
            "text": "All",
            "value": "$__all"
          },
          {
            "selected": true,
            "text": "Debug",
            "value": "Debug"
          },
          {
            "selected": false,
            "text": "Info",
            "value": "Info"
          },
          {
            "selected": false,
            "text": "Warning",
            "value": "Warning"
          },
          {
            "selected": false,
            "text": "Error",
            "value": "Error"
          },
          {
            "selected": false,
            "text": "Fatal",
            "value": "Fatal"
          }
        ],
        "query": "Debug, Info, Warning, Error, Fatal",
        "skipUrlSync": false,
        "type": "custom"
      },
      {
        "allValue": null,
        "current": {
          "text": "0",
          "value": "0"
        },
        "datasource": "InfluxDB",
        "definition": "select sum(*) from (select count + zero  from (select count(id) from alameda_event..event where level = 'EVENT_LEVEL_DEBUG' and subject_namespace =~ /^[[event_ns]]$/ and $timeFilter), (select count(id) - count(id) as zero from alameda_event..event) fill(0))",
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "debug_count",
        "options": [],
        "query": "select sum(*) from (select count + zero  from (select count(id) from alameda_event..event where level = 'EVENT_LEVEL_DEBUG' and subject_namespace =~ /^[[event_ns]]$/ and $timeFilter), (select count(id) - count(id) as zero from alameda_event..event) fill(0))",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "1",
          "value": "1"
        },
        "datasource": "InfluxDB",
        "definition": "select sum(*) from (select count + zero as info from (select count(id) from alameda_event..event where level = 'EVENT_LEVEL_INFO'  and subject_namespace =~ /^[[event_ns]]$/ and $timeFilter ), (select count(id) - count(id) as zero from alameda_event..event) fill(0))",
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "info_count",
        "options": [],
        "query": "select sum(*) from (select count + zero as info from (select count(id) from alameda_event..event where level = 'EVENT_LEVEL_INFO'  and subject_namespace =~ /^[[event_ns]]$/ and $timeFilter ), (select count(id) - count(id) as zero from alameda_event..event) fill(0))",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "7",
          "value": "7"
        },
        "datasource": "InfluxDB",
        "definition": "select sum(*) from (select count + zero as info from (select count(id) from alameda_event..event where level = 'EVENT_LEVEL_WARNING' and subject_namespace =~ /^[[event_ns]]$/ and $timeFilter ), (select count(id) - count(id) as zero from alameda_event..event) fill(0))",
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "warning_count",
        "options": [],
        "query": "select sum(*) from (select count + zero as info from (select count(id) from alameda_event..event where level = 'EVENT_LEVEL_WARNING' and subject_namespace =~ /^[[event_ns]]$/ and $timeFilter ), (select count(id) - count(id) as zero from alameda_event..event) fill(0))",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "1",
          "value": "1"
        },
        "datasource": "InfluxDB",
        "definition": "select sum(*) from (select count + zero as info from (select count(id) from alameda_event..event where level = 'EVENT_LEVEL_ERROR' and $timeFilter and subject_namespace =~ /^[[event_ns]]$/ ), (select count(id) - count(id) as zero from alameda_event..event) fill(0))",
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "error_count",
        "options": [],
        "query": "select sum(*) from (select count + zero as info from (select count(id) from alameda_event..event where level = 'EVENT_LEVEL_ERROR' and $timeFilter and subject_namespace =~ /^[[event_ns]]$/ ), (select count(id) - count(id) as zero from alameda_event..event) fill(0))",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "0",
          "value": "0"
        },
        "datasource": "InfluxDB",
        "definition": "select sum(*) from (select count + zero as info from (select count(id) from alameda_event..event where level = 'EVENT_LEVEL_FATAL' and $timeFilter and subject_namespace =~ /^[[event_ns]]$/ ), (select count(id) - count(id) as zero from alameda_event..event) fill(0))",
        "hide": 2,
        "includeAll": false,
        "label": null,
        "multi": false,
        "name": "fatal_count",
        "options": [],
        "query": "select sum(*) from (select count + zero as info from (select count(id) from alameda_event..event where level = 'EVENT_LEVEL_FATAL' and $timeFilter and subject_namespace =~ /^[[event_ns]]$/ ), (select count(id) - count(id) as zero from alameda_event..event) fill(0))",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": "InfluxDB",
        "definition": "show tag values on alameda_cluster_status from container with key = \"name\" where \"namespace\" =~ /^[[ns]]$/ and \"pod_name\"=~ /^[[pod]]$/ and ('false' = '$preloader' or '' = '$preloader')",
        "hide": 2,
        "includeAll": true,
        "label": null,
        "multi": false,
        "name": "pre_container",
        "options": [],
        "query": "show tag values on alameda_cluster_status from container with key = \"name\" where \"namespace\" =~ /^[[ns]]$/ and \"pod_name\"=~ /^[[pod]]$/ and ('false' = '$preloader' or '' = '$preloader')",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": "InfluxDB",
        "definition": "select \"name\", \"policy\" from alameda_cluster_status..controller where alameda_scaler_name = '$scaler' and namespace =~ /^[[ns]]$/ and ('false' = \"$preloader\" or '' = \"$preloader\") and \"kind\" = 'DEPLOYMENT'",
        "hide": 2,
        "includeAll": true,
        "label": null,
        "multi": false,
        "name": "deployment_controller",
        "options": [],
        "query": "select \"name\", \"policy\" from alameda_cluster_status..controller where alameda_scaler_name = '$scaler' and namespace =~ /^[[ns]]$/ and ('false' = \"$preloader\" or '' = \"$preloader\") and \"kind\" = 'DEPLOYMENT'",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": "InfluxDB",
        "definition": "select \"name\", \"policy\" from alameda_cluster_status..controller where alameda_scaler_name = '$scaler' and namespace =~ /^[[ns]]$/ and ('false' = \"$preloader\" or '' = \"$preloader\") and \"kind\" = 'DEPLOYMENTCONFIG'",
        "hide": 2,
        "includeAll": true,
        "label": null,
        "multi": false,
        "name": "deploymentConfig_controller",
        "options": [],
        "query": "select \"name\", \"policy\" from alameda_cluster_status..controller where alameda_scaler_name = '$scaler' and namespace =~ /^[[ns]]$/ and ('false' = \"$preloader\" or '' = \"$preloader\") and \"kind\" = 'DEPLOYMENTCONFIG'",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": "InfluxDB",
        "definition": "select \"name\", \"policy\" from alameda_cluster_status..controller where alameda_scaler_name = '$scaler' and namespace =~ /^[[ns]]$/ and ('false' = \"$preloader\" or '' = \"$preloader\") and \"kind\" = 'STATEFULSET'",
        "hide": 2,
        "includeAll": true,
        "label": null,
        "multi": false,
        "name": "statefulset_controller",
        "options": [],
        "query": "select \"name\", \"policy\" from alameda_cluster_status..controller where alameda_scaler_name = '$scaler' and namespace =~ /^[[ns]]$/ and ('false' = \"$preloader\" or '' = \"$preloader\") and \"kind\" = 'STATEFULSET'",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": "Prometheus",
        "definition": "label_values(namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate, pod_name)",
        "hide": 2,
        "includeAll": true,
        "label": null,
        "multi": false,
        "name": "deployment_pod",
        "options": [],
        "query": "label_values(namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate, pod_name)",
        "refresh": 2,
        "regex": "/^($deployment_controller-[0-9a-z]{8,10}-[0-9a-z]*$)/",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": "Prometheus",
        "definition": "label_values(namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate, pod_name)",
        "hide": 2,
        "includeAll": true,
        "label": null,
        "multi": false,
        "name": "deploymentConfig_pod",
        "options": [],
        "query": "label_values(namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate, pod_name)",
        "refresh": 2,
        "regex": "/^($deploymentConfig_controller-[0-9]{0,7}-[0-9a-z]*$)/",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": "Prometheus",
        "definition": "label_values(namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate, pod_name)",
        "hide": 2,
        "includeAll": true,
        "label": null,
        "multi": false,
        "name": "statefulset_pod",
        "options": [],
        "query": "label_values(namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate, pod_name)",
        "refresh": 2,
        "regex": "/^($statefulset_controller-[0-9]+$)/",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": "Prometheus",
        "definition": "label_values(container_memory_usage_bytes, pod_name)",
        "hide": 2,
        "includeAll": true,
        "label": null,
        "multi": false,
        "name": "memorys_deployment_pod",
        "options": [],
        "query": "label_values(container_memory_usage_bytes, pod_name)",
        "refresh": 2,
        "regex": "/^($deployment_controller-[0-9a-z]{8,10}-[0-9a-z]*$)/",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": "Prometheus",
        "definition": "label_values(container_memory_usage_bytes, pod_name)",
        "hide": 2,
        "includeAll": true,
        "label": null,
        "multi": false,
        "name": "memorys_deploymentConfig_pod",
        "options": [],
        "query": "label_values(container_memory_usage_bytes, pod_name)",
        "refresh": 2,
        "regex": "/^($deploymentConfig_controller-[0-9]{0,7}-[0-9a-z]*$)/",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": "Prometheus",
        "definition": "label_values(container_memory_usage_bytes, pod_name)",
        "hide": 2,
        "includeAll": true,
        "label": null,
        "multi": false,
        "name": "memorys_statefulset_pod",
        "options": [],
        "query": "label_values(container_memory_usage_bytes, pod_name)",
        "refresh": 2,
        "regex": "/^($statefulset_controller-[0-9]+$)/",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": "Prometheus",
        "definition": "label_values(namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate{pod_name=~ \"[[deployment_pod]]|[[statefulset_pod]]|[[deploymentConfig_pod]]\", container_name != \"POD\"}, container_name)",
        "hide": 2,
        "includeAll": true,
        "label": null,
        "multi": false,
        "name": "app_container",
        "options": [],
        "query": "label_values(namespace_pod_name_container_name:container_cpu_usage_seconds_total:sum_rate{pod_name=~ \"[[deployment_pod]]|[[statefulset_pod]]|[[deploymentConfig_pod]]\", container_name != \"POD\"}, container_name)",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      },
      {
        "allValue": null,
        "current": {
          "text": "All",
          "value": "$__all"
        },
        "datasource": "Prometheus",
        "definition": "label_values(container_memory_usage_bytes{pod_name=~ \"[[memorys_deployment_pod]]|[[memorys_statefulset_pod]]|[[memorys_deploymentConfig_pod]]\", container_name != \"POD\"}, container_name)",
        "hide": 2,
        "includeAll": true,
        "label": null,
        "multi": false,
        "name": "memorys_app_container",
        "options": [],
        "query": "label_values(container_memory_usage_bytes{pod_name=~ \"[[memorys_deployment_pod]]|[[memorys_statefulset_pod]]|[[memorys_deploymentConfig_pod]]\", container_name != \"POD\"}, container_name)",
        "refresh": 2,
        "regex": "",
        "skipUrlSync": false,
        "sort": 0,
        "tagValuesQuery": "",
        "tags": [],
        "tagsQuery": "",
        "type": "query",
        "useTags": false
      }
    ]
  },
  "time": {
    "from": "now-1d",
    "to": "now"
  },
  "timepicker": {
    "refresh_intervals": [
      "5s",
      "10s",
      "30s",
      "1m",
      "5m",
      "15m",
      "30m",
      "1h",
      "2h",
      "1d"
    ],
    "time_options": [
      "5m",
      "15m",
      "1h",
      "6h",
      "12h",
      "24h",
      "2d",
      "7d",
      "30d"
    ]
  },
  "timezone": "",
  "title": "Dashboard",
  "uid": "jDsdDlvWz",
  "version": 2
}
